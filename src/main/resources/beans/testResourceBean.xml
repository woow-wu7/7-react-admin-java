<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--手动注入-->
    <!-- id: 表示组件在容器中的名字，随便取 -->
    <!-- class: 表示bean对象的全路径 -->
    <!-- property: 表示bean对象中的属性 -->
    <!-- name: 表示具体的属性名 -->
    <!-- ref: 表示容器中的组建名，即bean标签的中id属性 -->

    <!--<bean id="userService" class="org.example.UserService">-->
    <!--property name="userBean" ref="userBean"/>-->
    <!--</bean>-->
    <!--<bean id="userBean" class="org.example.UserBean"></bean>-->

    <!--自动注入-->
    <!--1. 自动注入配置需要添加 beans => xmlns:context="http://www.springframework.org/schema/context" -->
    <!--2. 自动注入配置需要添加 beans => xsi:schemaLocation也要添加一些内容，如上 -->
    <!--3. 自动注入配置需要添加 <context:annotation-config/> 如下 -->
    <!--4. 注意自动注入和手动注入xml配置除了123还有一个区别：UserService中要使用userBean，自动注入不需要使用 property -->
    <context:annotation-config/>

    <bean id="testResourceBean" class="com.example.demo.bean.TestResourceBean"></bean>

    <!--
        Bean的作用域
            singleton作用域 ( 单列作用域 )

             1. Spring IOC容器在启动时，会将所有在 singleton 作用域中额bean对象实例化，并设置到单列缓存池中

             2. lazy-init属性 懒加载
                    如果设置为true，表示懒加载，容器在启动时，不会实例化bean对象，在程序调用时才会实例化
                    如果设置为false,表示不懒加载,容器启动则实例化
                    默认值 false
                    - false的好处？
                        (1) 容器启动时就可以发现配置的配置问题
                        (2) bean对象在启动时会设置在 ( 单列缓存池 ) 中，提高程序运行效率
                    - 什么对象适合作为单列对象，即在IOC容器中的对象，哪些对象适合放在IOC中？
                        (1) 不适合的有：无状态的对象，即不存在改变当前对象状态的成员变量
                        (2) 适合的有：Controller Service Dao Mapper等

    -->
</beans>